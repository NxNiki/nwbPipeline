% create an nwb structure with required fields
nwb = NwbFile( ...
    'session_start_time', '2020-01-01 00:00:00', ...
    'identifier', 'ident1', ...
    'session_description', 'DataPipeTutorial');

numShanks = 4;
numChannelsPerShank = 3;
 
ElectrodesDynamicTable = types.hdmf_common.DynamicTable(...
    'colnames', {'location', 'group', 'group_name', 'label'}, ...
    'description', 'all electrodes');
 
Device = types.core.Device(...
    'description', 'the best array', ...
    'manufacturer', 'Probe Company 9000' ...
);
nwb.general_devices.set('array', Device);
for iShank = 1:numShanks
    shankGroupName = sprintf('shank%d', iShank);
    EGroup = types.core.ElectrodeGroup( ...
        'description', sprintf('electrode group for %s', shankGroupName), ...
        'location', 'brain area', ...
        'device', types.untyped.SoftLink(Device) ...
    );
    
    nwb.general_extracellular_ephys.set(shankGroupName, EGroup);
    for iElectrode = 1:numChannelsPerShank
        ElectrodesDynamicTable.addRow( ...
            'location', 'unknown', ...
            'group', types.untyped.ObjectView(EGroup), ...
            'group_name', shankGroupName, ...
            'label', sprintf('%s-electrode%d', shankGroupName, iElectrode));
    end
end
ElectrodesDynamicTable.toTable()

nwb.general_extracellular_ephys_electrodes = ElectrodesDynamicTable;

electrode_table_region = types.hdmf_common.DynamicTableRegion( ...
    'table', types.untyped.ObjectView(ElectrodesDynamicTable), ...
    'description', 'all electrodes', ...
    'data', (0:length(ElectrodesDynamicTable.id.data)-1)');

fData = randi(250, 1, 1000); % Create fake data
fData_compressed = types.untyped.DataPipe( ...
    'data', fData, ...
    'chunkSize', [1, 1000], ...
    'maxSize', [12, 1000], ...
    'axis', 1);

electrical_series = types.core.ElectricalSeries( ...
    'starting_time', 0.0, ... % seconds
    'starting_time_rate', 30000., ... % Hz
    'data', fData_compressed, ...
    'electrodes', electrode_table_region, ...
    'data_unit', 'volts', ...
    'data_conversion', 1e-6);

lfpEphys = types.core.FilteredEphys('ElectricalSeries', electrical_series);
ecephys_module = types.core.ProcessingModule( ...
    'description', 'extracellular electrophysiology');

ecephys_module.nwbdatainterface.set('LFP', lfpEphys);
nwb.processing.set('ecephys', ecephys_module);

if exist('DefaultChunks1.nwb', 'file')
    delete('DefaultChunks1.nwb')
end
nwbExport(nwb, 'DefaultChunks1.nwb');

nwb = nwbRead('DefaultChunks1.nwb', 'ignorecache'); %load the nwb file with partial data
for i = 2: 12
    dataPart_i=randi(250, 1, 1000); % faked data chunk as if it was loaded
    nwb.processing.get('ecephys').nwbdatainterface.get('LFP').electricalseries.get('ElectricalSeries').data.append(dataPart_i); % append the loaded data
end


